
#include <stdlib.h> //malloc 사용 위한 라이브러리
#include <iostream>
using namespace std;

void swap(int * a, int * b);
void swap(double * a, double * b);
void swap(void * a, void * b, size_t size); // 알 수 없는 타입의 변수를 교환할 때

int main(void)
{
	int n = 5, k = 6;
	double d1 = 3.14, d2 = 2.54;
	swap(&n, &k);
	cout << n << " " << k << endl;

	swap(&d1, &d2, sizeof(d1));
	cout << d1 << " " << d2 << endl;
}
void memcp(void * dst, const void * sou, size_t cnt)
{
	char * d = (char *)dst;
	const char * s = (const char *)sou;
	for(; cnt>0; cnt--)	*d++ = *s++; //1바이트씩 cnt(Byte)만큼 옮기기
}
void swap(void *a, void *b, size_t size)
{
	void * t = malloc(size); // 런타임에 size가 할당되기 때문
	memcp(t, a, size);
	memcp(a, b, size);
	memcp(b, t, size);

	free(t); // 메모리 반환
}
void swap(double *a, double *b)
{
	double t = *a;
	*a = *b;
	*b = t;
}

void swap(int *a, int *b)
{
	int t = *a;
	*a = *b;
	*b = t;
}


======================================================================================
#include <stdio.h>

struct stream
{
	void printf(int n);
	void printf(char c);
	void printf(const char *str);
	void printf(double d);
};
void stream::printf(int n)
{
	::printf("%d", n);
}
void stream::printf(char c)
{
	::printf("%c", c);
}
void stream::printf(const char *str) 
{
	::printf("%s", str);
}
void stream::printf(double d)
{
	::printf("lf", d);
}
int main(void)
{
	stream c;
	c.printf(5);
	c.printf("seoul");
	c.printf(3.14);
}
